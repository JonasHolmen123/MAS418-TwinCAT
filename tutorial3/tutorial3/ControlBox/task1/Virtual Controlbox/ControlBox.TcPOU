<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="ControlBox" Id="{c124393c-9a45-48d1-993d-3fe0a50c48f8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ControlBox
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[

 




]]></ST>
    </Implementation>
    <Method Name="Joystick" Id="{a6a9a342-599a-49db-90a5-b67bbf8eabed}">
      <Declaration><![CDATA[METHOD Joystick
VAR_INPUT
	eModes	: E_Modes;
	eStatus : E_Status;
END_VAR
VAR_OUTPUT
	fJoystickY : LREAL;
	fJoystickX :LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eModes = E_Modes.Manual AND eStatus = E_Status.Running THEN
	fJoystickY := task1.fJoystickY;
	fJoystickX := task1.fJoystickX;
ELSE
	fJoystickY := 0.0;
	fJoystickX := 0.0;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PushButtons" Id="{13e71501-02b5-46f6-bd79-235ac54c40a2}">
      <Declaration><![CDATA[METHOD PushButtons
VAR_INPUT
	eModes 	: E_Modes;
	eStatus : E_Status;
END_VAR
VAR_OUTPUT
	bStart : BOOL;
	bStop : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT(eModes = E_Modes.Off) AND (NOT(eStatus = E_Status.Fault) OR (eStatus = E_Status.NotReady)) THEN 
	bStart := task1.bStart;
	bStop := task1.bStop;
ELSE
	bStart := FALSE;
	bStop := FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="State" Id="{1e71f237-e1f0-419c-80f4-22b8bb34091a}">
      <Declaration><![CDATA[METHOD State 
VAR_INPUT
	eModeSwitch : E_Modes;
END_VAR
VAR_OUTPUT
	eStatus : E_Status;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
CASE eStatus OF
	E_Status.Fault:										///////// FAULT
		IF NOT(task1.bError) THEN
			eStatus := E_Status.Ready;       
		ELSIF eModeSwitch = E_Modes.Off THEN
			eStatus := E_Status.NotReady;
		END_IF										///////// NOTREADY
	E_Status.NotReady:
		IF eModeSwitch = E_Modes.Manual OR eModeSwitch = E_Modes.Auto THEN 
			eStatus := E_Status.Ready;
		END_IF
	E_Status.Ready:										///////// READY
		IF task1.bStart THEN
			eStatus:= E_Status.Starting;
		ELSIF task1.bError THEN
			eStatus := E_Status.Fault;
		ELSIF eModeSwitch = E_Modes.Off THEN
			eStatus := E_Status.NotReady;
		END_IF
	E_Status.Running:									///////// Running
		IF task1.bError THEN
			eStatus := E_Status.Fault;
		ELSIF eModeSwitch = E_Modes.Manual AND NOT(task1.bStop) THEN
			task1.bStart:=TRUE;
		ELSIF eModeSwitch = E_Modes.Auto AND NOT(task1.bStart) THEN
			eStatus:= E_Status.Ready;
		ELSIF eModeSwitch = E_Modes.Off THEN
			eStatus := E_Status.NotReady;
		ELSIF task1.bStop THEN
			task1.bStart:=FALSE;			
			eStatus := E_Status.Stopping;
		END_IF
	E_Status.Starting:							///////// starting
		eStatus:= E_Status.Running;
		IF task1.bError THEN
			eStatus := E_Status.Fault;
		ELSIF eModeSwitch = E_Modes.Off THEN
			eStatus := E_Status.NotReady;
		END_IF
	E_Status.Stopping:							///////// Stopping
		eStatus := E_Status.Ready;
		IF task1.bError THEN
			eStatus := E_Status.Fault;
		ELSIF eModeSwitch = E_Modes.Off THEN
			eStatus := E_Status.NotReady;
		END_IF
ELSE
	eStatus := E_Status.NotReady;
END_CASE
 ]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>